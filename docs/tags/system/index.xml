<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>system on OpsNotice.xyz</title><link>https://valentin2105.github.io/opsnotice.xyz/tags/system/</link><description>Recent content in system on OpsNotice.xyz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Jul 2016 09:09:39 +0000</lastBuildDate><atom:link href="https://valentin2105.github.io/opsnotice.xyz/tags/system/index.xml" rel="self" type="application/rss+xml"/><item><title>Fix Debian locales error</title><link>https://valentin2105.github.io/opsnotice.xyz/post/fix-debian-locales-error/</link><pubDate>Tue, 26 Jul 2016 09:09:39 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/fix-debian-locales-error/</guid><description>Sometimes, Debian installations have some troubles with locales when you&amp;rsquo;re using apt for example. It is caused by missing environment variables or missing locales configuration.
To fix this problem for ever, just do these two things :
Add these lines on .bashrc or .zshrc :
export LANGUAGE=en_US.UTF-8 export LANG=en_US.UTF-8 export LC_ALL=en_US.UTF-8 Then you can run these commands :
locale-gen en_US.UTF-8 dpkg-reconfigure locales The last command ask you to choose any locale, I use en_US.</description></item><item><title>Manage containers with Systemd</title><link>https://valentin2105.github.io/opsnotice.xyz/post/manage-containers-with-systemd/</link><pubDate>Mon, 25 Jul 2016 19:09:58 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/manage-containers-with-systemd/</guid><description>Use Docker containers on the fly is quite easy but sometimes container management by shell becomes difficult. For easily launch and restart your container, we can use a Systemd unit.
Create Unit file In this example, I use a REDIS image that run with docker. We need to create the file /etc/systemd/system/redis.service :
[Unit] Description=Redis Service After=docker.service Requires=docker.service [Service] ExecStartPre=-/usr/bin/docker kill redis ExecStartPre=-/usr/bin/docker rm redis ExecStartPre=-/usr/bin/docker pull redis:latest ExecStart=/usr/bin/docker run -d --name redis --restart always redis:latest ExecStop=/usr/bin/docker stop redis [Install] WantedBy=multi-user.</description></item></channel></rss>