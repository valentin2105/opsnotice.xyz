<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on OpsNotice.xyz</title><link>https://valentin2105.github.io/opsnotice.xyz/tags/linux/</link><description>Recent content in linux on OpsNotice.xyz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 08 May 2017 23:22:48 +0000</lastBuildDate><atom:link href="https://valentin2105.github.io/opsnotice.xyz/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>IPTables IPv4/6 for Docker</title><link>https://valentin2105.github.io/opsnotice.xyz/post/iptables-ferm-docker/</link><pubDate>Mon, 08 May 2017 23:22:48 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/iptables-ferm-docker/</guid><description>Docker use IPTables to create network isolation between containers, to NAT traffic from their private networks and to expose ports on your Docker host. It&amp;rsquo;s why manage a firewall in front of that is not easy as 1,2,3, even more if you use dual stack (IPv4/6) on your containers.
To facilitate the control of Docker host&amp;rsquo;s firewall, I use Ferm, a great Perl front-end for IPtables. You can for sure use the great and simple UFW but Ferm got a more declarative way to write your firewall rules.</description></item><item><title>Fix Debian locales error</title><link>https://valentin2105.github.io/opsnotice.xyz/post/fix-debian-locales-error/</link><pubDate>Tue, 26 Jul 2016 09:09:39 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/fix-debian-locales-error/</guid><description>Sometimes, Debian installations have some troubles with locales when you&amp;rsquo;re using apt for example. It is caused by missing environment variables or missing locales configuration.
To fix this problem for ever, just do these two things :
Add these lines on .bashrc or .zshrc :
export LANGUAGE=en_US.UTF-8 export LANG=en_US.UTF-8 export LC_ALL=en_US.UTF-8 Then you can run these commands :
locale-gen en_US.UTF-8 dpkg-reconfigure locales The last command ask you to choose any locale, I use en_US.</description></item><item><title>Manage containers with Systemd</title><link>https://valentin2105.github.io/opsnotice.xyz/post/manage-containers-with-systemd/</link><pubDate>Mon, 25 Jul 2016 19:09:58 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/manage-containers-with-systemd/</guid><description>Use Docker containers on the fly is quite easy but sometimes container management by shell becomes difficult. For easily launch and restart your container, we can use a Systemd unit.
Create Unit file In this example, I use a REDIS image that run with docker. We need to create the file /etc/systemd/system/redis.service :
[Unit] Description=Redis Service After=docker.service Requires=docker.service [Service] ExecStartPre=-/usr/bin/docker kill redis ExecStartPre=-/usr/bin/docker rm redis ExecStartPre=-/usr/bin/docker pull redis:latest ExecStart=/usr/bin/docker run -d --name redis --restart always redis:latest ExecStop=/usr/bin/docker stop redis [Install] WantedBy=multi-user.</description></item><item><title>Build a Swarm cluster</title><link>https://valentin2105.github.io/opsnotice.xyz/post/build-swarm-cluster/</link><pubDate>Mon, 25 Jul 2016 04:46:45 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/build-swarm-cluster/</guid><description>The version 1.12 of Docker has been released few days ago. Among the changes, Docker-Swarm get embedded directly into the Engine that allow easier Swarm deployment. I’m going to show that to you.
Docker Swarm is native clustering for Docker. It turns a pool of Docker hosts into a single, virtual Docker host.
Earlier stages, it was quite hard to deploy a Swarm cluster, you had to generate some certs, use a service discovery, configure each node… This time is over !</description></item><item><title>LEMP on Docker</title><link>https://valentin2105.github.io/opsnotice.xyz/post/lemp-on-docker/</link><pubDate>Sun, 24 Jul 2016 03:28:15 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/lemp-on-docker/</guid><description>In this first post, I&amp;rsquo;ll show you how to deploy a LEMP Server (Linux, Nginx, MariaDB, PHP) with Docker on Debian Jessie.
Why ? The advantage of use Docker in this case is that you can deploy it first on your laptop for your development process and finally deploy it easily on a Docker-based VM directly in the Cloud.
Install Docker The first step is the installation of Docker-Engine and Docker-Compose.</description></item></channel></rss>