<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cluster on OpsNotice.xyz</title><link>https://valentin2105.github.io/opsnotice.xyz/categories/cluster/</link><description>Recent content in cluster on OpsNotice.xyz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 14 Nov 2017 09:53:14 +0000</lastBuildDate><atom:link href="https://valentin2105.github.io/opsnotice.xyz/categories/cluster/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes in IPv6 only</title><link>https://valentin2105.github.io/opsnotice.xyz/post/kubernetes-ipv6-only/</link><pubDate>Tue, 14 Nov 2017 09:53:14 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/kubernetes-ipv6-only/</guid><description>Since few weeks, I&amp;rsquo;m working to deploy IPv6-only Kubernetes cluster in production for my company. Here is how I made it, maybe it will help you if you want to try this (tumultuous) adventure.
I- Kubernetes installation To put Kubernetes in production, I strongly recommend avoiding using automated installation script but instead, use a configuration management tool (Saltstack, Chef, Puppet&amp;hellip;) to deploy Kubernetes from scratch like done in kubernetes-the-hard-way by the awesome Kelsey Hightower (the k8s-dope guy).</description></item><item><title>Kubernetes tips &amp; tricks</title><link>https://valentin2105.github.io/opsnotice.xyz/post/kubernetes-tips-tricks/</link><pubDate>Wed, 16 Aug 2017 23:27:54 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/kubernetes-tips-tricks/</guid><description>In this post, we will see few points to make your Kubernetes experience easier, secure and reproducible, especially on premise cluster.
I- Deploy using helm Helm is described as a packets manager for Kubernetes. It allows you to package all your application specifications to easily redeploy on any cluster.
A basic helm repository is composed by :
Charts.yaml for the name, tags and version of your application templates/ is the folder where you put all your Kubernetes .</description></item><item><title>Overview of Rancher UI</title><link>https://valentin2105.github.io/opsnotice.xyz/post/overview-rancher-ui/</link><pubDate>Thu, 18 Aug 2016 22:09:47 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/overview-rancher-ui/</guid><description>Today, I&amp;rsquo;ll introduce you to Rancher UI, a Docker cluster management system, allowing deploy containers across multiple Docker hosts. You can manage your own Docker servers, deploy VMs on the cloud or add your Swarm, Kubernetes or Mesos existent clusters.
Say hello to Rancher, the container management platform that makes everything easy.
The goal of Rancher UI is to manage some Docker hosts (virtual or physical) from a Web interface which ensures container orchestration.</description></item><item><title>Build a Swarm cluster</title><link>https://valentin2105.github.io/opsnotice.xyz/post/build-swarm-cluster/</link><pubDate>Mon, 25 Jul 2016 04:46:45 +0000</pubDate><guid>https://valentin2105.github.io/opsnotice.xyz/post/build-swarm-cluster/</guid><description>The version 1.12 of Docker has been released few days ago. Among the changes, Docker-Swarm get embedded directly into the Engine that allow easier Swarm deployment. I’m going to show that to you.
Docker Swarm is native clustering for Docker. It turns a pool of Docker hosts into a single, virtual Docker host.
Earlier stages, it was quite hard to deploy a Swarm cluster, you had to generate some certs, use a service discovery, configure each node… This time is over !</description></item></channel></rss>